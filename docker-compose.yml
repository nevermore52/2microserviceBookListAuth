services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgres/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  app:
    build:
      context: ./lib
      dockerfile: dockerfile
    container_name: main-service
    env_file:
      - ./lib/.env 
    ports:
      - "${APP_PORT}:8080"
    environment:
      - DB_URI=${DB_URI}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    
  auth:
    build:
      context: ./auth
      dockerfile: dockerfile
    container_name: auth-service
    env_file:
      - ./auth/.env 
    ports:
      - "${AUTH_PORT}:8081"
    environment:
      - DB_URI=${DB_URI}
    depends_on:
      postgres: 
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:

